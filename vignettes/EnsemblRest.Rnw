% -*- mode: noweb; noweb-default-code-mode: R-mode; -*-
%\VignetteIndexEntry{EnsemblRest primer}
%\VignetteKeywords{}
%\VignetteDepends{}
%\VignettePackage{EnsemblRest}
\documentclass[10pt, a4paper]{article}
\RequirePackage{colortbl}
\RequirePackage{xcolor}
\usepackage{amsmath,pstricks}
\usepackage{hyperref}
\usepackage[hmargin=3cm,vmargin=3.5cm]{geometry}
\usepackage[authoryear,round]{natbib}
\usepackage{fmtcount} % displaying latex counters
\usepackage[T1]{fontenc}
\usepackage[scaled]{helvet}
\usepackage{color}
\usepackage{multirow}
\usepackage{listings}
\usepackage{wrapfig}
\SweaveOpts{keep.source=TRUE}
\definecolor{darkred}{rgb}{0.545,0,0} 
\definecolor{midnightblue}{rgb}{0.098,0.098,0.439} 
\definecolor{palered}{rgb}{1.0,0.5,0.5} 
\definecolor{palegreen}{rgb}{0.5,1.0,0.5} 
\definecolor{silver}{rgb}{0.95,0.95,0.95}
\renewcommand*\familydefault{\sfdefault}
\newcommand{\scscst}{\scriptscriptstyle}
\newcommand{\scst}{\scriptstyle}
\newcommand{\code}[1]{{\ttfamily\texttt{#1}}}
\author{Tim Yates}
\begin{document}
\title{An R interface to the Ensembl REST API}
\maketitle
\tableofcontents

\pagebreak

\section{Introduction}

This package uses the Ensembl REST API\footnote{\url{http://beta.rest.ensembl.org/}} (currently in beta) to extract data from Ensembl into R.

As the REST API is in Beta, this package should also be considered to be in flux and functions/parameters/etc are subject to change as things get finalized.

It could also do with your help.  If you find a problem, something you think could be better, or a better way of doing things, please consider visiting the GitHub project at \url{https://github.com/acbb/EnsemblRest} and posting an issue or a Pull Request.  Thanks!

\section{Available Methods}
To begin with (assuming you have installed this package), you need to load it into your R session:

<<eval=FALSE,echo=TRUE>>=
library( EnsemblRest )
@

The following subsections then list the methods available to you.

\pagebreak

\subsection{Information}

<<eval=TRUE, echo=TRUE>>=
message("This vignette does not evaluate any code because it currently relies on the no-longer-existing beta.rest.ensembl.org")
@ 

\subsubsection{\code{isAlive}}

Firstly, we can check to see that the REST API is accepting calls:
<<eval=FALSE,echo=TRUE>>=
isAlive()
@

\subsubsection{\code{infoSpecies}}

To get a list of available species on the server, you can use the \code{infoSpecies} call\footnote{\url{http://beta.rest.ensembl.org/documentation/info/species}}.

<<eval=FALSE,echo=TRUE>>=
infoSpecies()[1:3] # Just the first 3
@

\subsubsection{\code{infoAssembly}}

The \code{infoAssembly} call\footnote{\url{http://beta.rest.ensembl.org/documentation/info/assembly_info}} returns information about the currently available assemblies in the given species.

<<eval=FALSE,echo=TRUE>>=
infoAssembly( 'human' )
@

\subsubsection{\code{assemblyDetails}}

The \code{assemblyDetails} call\footnote{\url{http://beta.rest.ensembl.org/documentation/info/assembly_stats}} returns information about one of these assemblies.

<<eval=FALSE,echo=TRUE>>=
assemblyDetails( 'X', 'human' )
@

\subsubsection{\code{infoComparas}}

The \code{infoComparas} call\footnote{\url{http://beta.rest.ensembl.org/documentation/info/comparas}} lists the available comparative genomics databases.

<<eval=FALSE,echo=TRUE>>=
infoComparas()
@

\subsubsection{\code{infoData}}

The \code{infoData} call\footnote{\url{http://beta.rest.ensembl.org/documentation/info/data}} shows the data releases available to the REST service

<<eval=FALSE,echo=TRUE>>=
infoData()
@

\subsubsection{\code{infoRest}}

\code{infoRest} shows the current version\footnote{\url{http://beta.rest.ensembl.org/documentation/info/rest}} of the REST service

<<eval=FALSE,echo=TRUE>>=
infoRest()
@

\subsubsection{\code{infoSoftware}}

And finally in the info section, \code{infoSoftware} shows\footnote{\url{http://beta.rest.ensembl.org/documentation/info/software}} the current version of the Ensembl API.

<<eval=FALSE,echo=TRUE>>=
infoSoftware()
@

\pagebreak

\subsection{Comparative Genomics}

\subsubsection{\code{geneTree}}

This method\footnote{\url{http://beta.rest.ensembl.org/documentation/info/rest}} fetches the gene tree in New Hampshire format for a given Ensembl gene tree identifier.

<<eval=FALSE,echo=TRUE>>=
geneTree( 'ENSGT00390000003602' )
@

it is also possible to specify the NH format you require (ie: for full format):

<<eval=FALSE,echo=TRUE>>=
geneTree( 'ENSGT00390000003602', nh_format='full' )
@

\subsubsection{\code{homologyById}}

When given an Ensembl Gene ID, returns the homology\footnote{\url{http://beta.rest.ensembl.org/documentation/info/homology_ensemblgene}} information for it.

<<eval=FALSE,echo=TRUE>>=
hResponse = homologyById( 'ENSG00000170037' )
hResponse                 # The response object
hResponse[[1]]$homologies[1:2,] # Just the top 2 homologies to save room
@

\subsubsection{\code{homologyBySymbol}}

You can also retrieve homology information\footnote{\url{http://beta.rest.ensembl.org/documentation/info/homology_symbol}} given a symbol and a species;

<<eval=FALSE,echo=TRUE>>=
hResponse = homologyBySymbol( 'BRCA2', 'human' )
hResponse                 # The response object
hResponse[[1]]$homologies[1:2,] # Again, just the top 2 homologies to save room
@

And using \code{format='condensed'}, you can get a more condensed result:

<<eval=FALSE,echo=TRUE>>=
hResponse = homologyBySymbol( 'BRCA2', 'human', format='condensed' )
hResponse                 # The response object
hResponse[[1]]$homologies[1:10,]
@

\pagebreak

\subsection{Cross References}

Cross references are links to other data about the object of interest.  It should be noted that these other data hold different fields and datatypes, so the results are returned in a \code{data.frame} containing a superset of column names, with non-applicable columns for a given result filled with \code{<NA>}.

As a single object may have multiple synonyms, this will cause the object to exist in multiple rows, one for each synonym. 

\subsubsection{xrefsById}

Firstly we can get all external references\footnote{\url{http://beta.rest.ensembl.org/documentation/info/xref_id}} for a given Ensembl ID:

<<eval=FALSE,echo=TRUE>>=
xrefsById( 'ENSG00000170037' )
@

\subsubsection{xrefsByName}

Or, we can look for an external reference primary accession\footnote{\url{http://beta.rest.ensembl.org/documentation/info/xref_name}} (given a species):

<<eval=FALSE,echo=TRUE>>=
xrefsByName( 'NM_004333', 'human' )
@

\subsubsection{xrefsBySymbol}

And we can finally look up all Ensembl objects referenced by an external symbol for a given species\footnote{\url{http://beta.rest.ensembl.org/documentation/info/xref_external}}:

<<eval=FALSE,echo=TRUE>>=
xrefsBySymbol( 'BRAF', 'human' )
@

\pagebreak

\subsection{Features}

\subsubsection{featuresByRegion}

We can also look for features along a given range\footnote{\url{http://beta.rest.ensembl.org/documentation/info/feature_region}} (by default this will just look for genes):

<<eval=FALSE,echo=TRUE>>=
featuresByRegion( '7:140424943-140624564', 'human' )
@

And by using the \code{feature} parameter, we can specify what we're looking for

<<eval=FALSE,echo=TRUE>>=
featuresByRegion( '7:140424943-140624564', 'human', feature='transcript' )
@

You can specify multiple features (columns which don't exist for a given type of result will be filled with \code{NA})

<<eval=FALSE,echo=TRUE>>=
featuresByRegion( '7:140424943-140624564', 'human', feature=c('gene','transcript') )
@

\pagebreak

\subsection{Lookup}

\subsubsection{lookupId}

To find the database and species containing a known Ensembl id, you can use the lookup function\footnote{\url{http://beta.rest.ensembl.org/documentation/info/lookup}} like so:

<<eval=FALSE,echo=TRUE>>=
lookupId( 'ENSG00000170037' )
@

\pagebreak

\subsection{Mapping}

The mapping functions are used to convert co-ordinates between systems or databases.

There is currently an issue with \code{mappingCdna}, \code{mappingCds} and \code{mappingTranslation} in that the \code{seq\_region\_name} is not returned from the REST interface.  This has been reported to Ensembl and should be fixed in the next release.

\subsubsection{mapping}

The \code{mapping} function\footnote{\url{http://beta.rest.ensembl.org/documentation/info/assembly_map}} converts the co-ordinates in one assembly into another, ie:

<<eval=FALSE,echo=TRUE>>=
mapping( 'NCBI36', 'X:1..10000:1', 'GRCh37', 'human' )
@

As you can see, it returns one \code{GRanges} object per result, with an \code{original} row and a \code{mapped} row.

\subsubsection{mappingCdna}

This function\footnote{\url{http://beta.rest.ensembl.org/documentation/info/assembly_cdna}} converts CDNA co-ordinates for a given Ensembl Transcript to genomic co-ordinates.

<<eval=FALSE,echo=TRUE>>=
mappingCdna( 'ENST00000288602', '100..300' )
@

\subsubsection{mappingCds}

Or you can convert CDS co-ordinates\footnote{\url{http://beta.rest.ensembl.org/documentation/info/assembly_cds}} instead of CDNA ones:

<<eval=FALSE,echo=TRUE>>=
mappingCds( 'ENST00000288602', '100..300' )
@

\subsubsection{mappingTranslation}

And finally, it is possible to convert from protein co-ordinates to genomic ones using the \code{mappingTranslation} method\footnote{\url{http://beta.rest.ensembl.org/documentation/info/assembly_translation}}:

<<eval=FALSE,echo=TRUE>>=
mappingTranslation( 'ENSP00000288602', '100..300' )
@

\pagebreak

\subsection{Sequences}

\subsubsection{sequenceById}

Fetch a sequence based on the stable id of an Ensembl feature\footnote{\url{http://beta.rest.ensembl.org/documentation/info/sequence_id}} (I'm using \code{str} here to avoid overflowing the pdf too much):

<<eval=FALSE,echo=TRUE>>=
str( sequenceById( 'ENSG00000157764' ), give.head=F, strict.width='cut' )
@

You can also get different types of sequence, here is an example for the spliced CDNA sequence of a transcript:

<<eval=FALSE,echo=TRUE>>=
str( sequenceById( 'ENST00000473358', type='cdna' ), give.head=F, strict.width='cut' )
@

And again, for the protein coding

<<eval=FALSE,echo=TRUE>>=
str( sequenceById( 'ENSP00000334393', type='protein' ), give.head=F, strict.width='cut' )
@

\subsubsection{sequenceByRegion}

You can also just query for a region of a given species\footnote{\url{http://beta.rest.ensembl.org/documentation/info/sequence_region}}:

<<eval=FALSE,echo=TRUE>>=
str( sequenceByRegion( 'X:1000000..1000100:1', 'human' ), give.head=F, strict.width='cut' )
@

If you pass \code{format='fasta'} to the above method, it will just return you a character vector containing a FastA formatted sequence.

\pagebreak

\subsection{Variation}

\subsubsection{variationAllele}

<<eval=FALSE,echo=TRUE>>=
var = variationAllele( 'C', '9:22125503-22125502:1', 'human' )
var                       # The response object
var[[1]]$transcripts[1:2] # Just the top 2 transcripts of the first response to save room
@

\subsubsection{variationId}

<<eval=FALSE,echo=TRUE>>=
var = variationId( 'COSM476', 'human' )
var                       # The response object
var[[1]]$transcripts[1:2] # Again, just the top 2 transcripts to save room
@

\end{document}
